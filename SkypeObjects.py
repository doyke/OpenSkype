#!/usr/bin/python

#
# Representation of data in Skype
#

import dpkt

class ObjectHeader(dpkt.Packet):
	__hdr__ =	(
			('length', 'B', 0x00),
#			('flag', 'B', 0x00),
#			('third_byte', 'B', 0x00),
			)

	def parse(self):
		self.flag = 0x00
		self.third_byte = 0x00
		self.object_id = '\x00\x00'

		self.flag_present = ord(self.data[0]) & 0xf0 != 0	# is third byte, second byte skipped ?
		if self.flag_present:
			self.flag = ord(self.data[0])
			self.data = self.data[1:]
			self.third_byte_present = self.flag & 0x80 != 0x00
			self.id_present = self.flag & 0x02 != 0x00
		else:
			self.third_byte_present = True		# if the second byte is skipped, the third one
			self.id_present = True			# and the object ID are present
		if self.third_byte_present:
			self.third_byte = ord(self.data[0])
			self.data = self.data[1:]
		if self.id_present:
			self.object_id = self.data[0:2]
			self.data = self.data[2:]

if __name__ == "__main__":
	from utils import *

#	demopkt = '07 7b    97be 41 01000101'
#	demopkt = '07 9b 01 97b0 41 01000101'
#	demopkt = '05 d9 02 42b517f484'
	demopkt = '48 c1 ad 06 42e9b11f90d226ea51e0392418b6040863c018ce14ac3955cc8829c7c9b62651c6472f5f594946a6c03926064dd87a6c0e9997348a5e4efd7e500bbb327f8376a3dd6fdce693ffff'
#	demopkt = '12 72 9853 42f623084231e64fad64b34b6b1e9876'
#	demopkt = 'f2 04 eb 02 985f412002115377d386110f051a4109000034000204000304000468000a6403104e4c000011030012800100210202115eaf11897c61051a410800003400020000030000043d000a630310474200001290010021030211b2750e7b5615051a41080000340002000003000004ae01000a640310424500001283010021030211506d87a5f2fe051a410800003400020000030000044c000a6403104154000012920100210302116d5b1a76a1fc051a4108000034000204000304000436000a64031044450000128c0100210302115070aae89e15051a4108000034000202000302000458000a6403104e4c00001297010021030211ad5032b55777051a410800002f000200000300000454000a63031055530000126d002103021161576eec296b051a410800003400020000030000044a000a64031055530000127800210302115280dd7a899c051a410800003400020000030000043f000a6303104649000012a0010021030211adb0ba2565e9051a41080000340002000003000004a401000a6403104341000012670021020211442b4703f888051a410800003400020000030000044d000a630310555300001275002103021150dd334ba197051a4108000034000200000300000455000a64031046490000128e010021030211b83ae2a7ef18051a4108000034000201000301000448000a64031055530000127b0021030211b83a609679f7051a410800003400020000030000044b000a6403105553000012770021030211d45558ba60e2051a4108000034000200000300000434000a6103105345000012960100210302116013ed95b17a051a410800002f000209000309000446000a64031055530000127d002103'

	demopkt = hexstr2bytestr(demopkt.replace(' ', ''))
	h = ObjectHeader(demopkt)
	h.parse()

	print 'Flag present: '+str(h.flag_present)
	print 'Third byte present: '+str(h.third_byte_present)
	print 'Object ID present: '+str(h.id_present)
	print 'Object ID: '+str2hex(h.object_id)
	print 'Content: '+str2hex(h.data)

